Function CleanKey(str As String) As String
    Dim temp As String
    temp = Trim(str)
    temp = Replace(temp, Chr(160), "") ' Non-breaking space
    temp = Replace(temp, Chr(32), "")  ' Space
    temp = Replace(temp, Chr(9), "")   ' Tab
    temp = Replace(temp, vbTab, "")    ' Tab
    temp = Replace(temp, vbCrLf, "")   ' Enter
    temp = Replace(temp, vbCr, "")     ' Carriage return
    temp = Replace(temp, vbLf, "")     ' Line feed
    CleanKey = LCase(temp)
End Function

Function SimilarityRatio(str1 As String, str2 As String) As Double
    Dim i As Integer, matches As Integer
    Dim minLen As Integer
    str1 = LCase(CleanKey(str1))
    str2 = LCase(CleanKey(str2))
    minLen = Application.Min(Len(str1), Len(str2))
    
    For i = 1 To minLen
        If Mid(str1, i, 1) = Mid(str2, i, 1) Then
            matches = matches + 1
        End If
    Next i
    
    SimilarityRatio = matches / Application.Max(Len(str1), Len(str2))
End Function

Function LongestCommonSubstring(str1 As String, str2 As String) As Integer
    Dim i As Integer, j As Integer
    Dim maxLen As Integer
    Dim arr() As Integer
    ReDim arr(Len(str1), Len(str2))

    For i = 1 To Len(str1)
        For j = 1 To Len(str2)
            If Mid(str1, i, 1) = Mid(str2, j, 1) Then
                If i = 1 Or j = 1 Then
                    arr(i, j) = 1
                Else
                    arr(i, j) = arr(i - 1, j - 1) + 1
                End If
                If arr(i, j) > maxLen Then maxLen = arr(i, j)
            End If
        Next j
    Next i

    LongestCommonSubstring = maxLen
End Function

Sub UpdateINFOR()
    Dim wb1 As Workbook, wb2 As Workbook
    Dim ws1 As Worksheet, ws2 As Worksheet, wsLog As Worksheet
    Dim lastRow1 As Long, lastRow2 As Long, logRow As Long
    Dim dict As Object
    Dim i As Long, key As String, value As String, j As Long
    Dim file1Path As String, file2Path As String
    Dim newFileName As String, todayStr As String
    Dim folderPath As String, fileName As String
    Dim regex As Object
    Dim dictKey As Variant, matchKey As String
    Dim userName As String, commentText As String

    Dim ws As Worksheet
    On Error Resume Next
    Set ws = ThisWorkbook.Sheets("Tool1")
    On Error GoTo 0
    If ws Is Nothing Then
        MsgBox "Sheet 'Have not sheet Tool1", vbCritical
        Exit Sub
    End If
    userName = ws.Range("D28").value

    ' Select files
    file1Path = Application.GetOpenFilename("Excel Files (*.xls; *.xlsx; *.xlsm), *.xls; *.xlsx; *.xlsm", , "SELECT QryTemp")
    If file1Path = "False" Then Exit Sub
    file2Path = Application.GetOpenFilename("Excel Files (*.xls; *.xlsx; *.xlsm), *.xls; *.xlsx; *.xlsm", , "SELECT COMP1")
    If file2Path = "False" Then Exit Sub

    ' Open files
    Application.DisplayAlerts = False
    Set wb1 = Workbooks.Open(file1Path, ReadOnly:=True)
    Set ws1 = wb1.Sheets(1)
    Set wb2 = Workbooks.Open(file2Path)

    ' Create dictionary
    Set dict = CreateObject("Scripting.Dictionary")
    lastRow1 = ws1.Cells(ws1.Rows.Count, "Q").End(xlUp).Row
    
    For i = 2 To lastRow1
        If Trim(ws1.Cells(i, "S").value) <> "" Then
            key = LCase(CleanKey(ws1.Cells(i, "Q").text))
            value = Trim(CStr(ws1.Cells(i, "S").value))
    
            If dict.exists(key) Then
                Select Case value
                    Case "Information received"
                        dict(key) = value
                    Case "Closed"
                        If dict(key) <> "Information received" Then dict(key) = value
                    Case "Waiting for Information"
                        If dict(key) <> "Information received" And dict(key) <> "Closed" Then dict(key) = value
                End Select
            Else
                dict(key) = value
            End If
        End If
    Next i

    ' Create result sheet
    On Error Resume Next
    Set wsLog = wb2.Sheets("Result sheet")
    If wsLog Is Nothing Then
        Set wsLog = wb2.Sheets.Add(After:=wb2.Sheets(wb2.Sheets.Count))
        wsLog.Name = "RESULT"
        wsLog.Range("A1:F1").Merge
        wsLog.Range("G1:K1").Merge
        wsLog.Range("A1:K1").HorizontalAlignment = xlCenter
        wsLog.Range("A1:K1").VerticalAlignment = xlCenter
        wsLog.Range("A1:K1").Interior.Color = RGB(188, 180, 255)
        wsLog.Range("A1:F1").value = "COMP1 component list"
        wsLog.Range("G1:K1").value = "DB component list"
        wsLog.Range("A2:K2").value = Array("Sheet Name", "Row", "Device category", "Ordering Part Number", "Manufacturer name", "Comment", "ID", "Ordering Part Number", "Manufacturer name", "Status", "Add Comment")
        wsLog.Range("A2:K2").Interior.Color = RGB(217, 217, 217)
        wsLog.Range("A2:K2").HorizontalAlignment = xlCenter
        wsLog.Range("A2:K2").VerticalAlignment = xlCenter
        
        Dim combinedRange As Range
        Set combinedRange = Union(wsLog.Range("A1:K1"), wsLog.Range("A2:K2"))
        With combinedRange.Borders
            .LineStyle = xlContinuous
            .Color = RGB(0, 0, 0)
            .Weight = xlThin
        End With
    End If
    
    On Error GoTo 0
    logRow = wsLog.Cells(wsLog.Rows.Count, "A").End(xlUp).Row + 1

    ' Loop through sheets
    For Each ws2 In wb2.Sheets
        If Not ws2 Is Nothing Then
            If ws2.Range("B1").value = "Component BOM Review Sheet" Then
                lastRow2 = ws2.Cells(ws2.Rows.Count, "E").End(xlUp).Row
                
                Dim startRow As Long
                startRow = 41
                Do While ws2.Cells(startRow, "E").value = "" And startRow < lastRow2
                    startRow = startRow + 1
                Loop
               
                For i = startRow To lastRow2
                    key = LCase(CleanKey(ws2.Cells(i, "E").text))
                    matchKey = ""
    
                    For Each dictKey In dict.Keys
                        If Left(LCase(dictKey), Len(key)) = key Then
                            matchKey = dictKey
                            Exit For
                        End If
                    Next dictKey
    
                    If matchKey <> "" Then
                        ws2.Cells(i, "AD").value = dict(matchKey)
                        ws2.Cells(i, "AE").value = Format(Date, "yyyy/mm/dd") & "_" & userName & vbCrLf & "This components is not new type. Low risk."
                        
                        ' create log
                        wsLog.Cells(logRow, "A").value = ws2.Name
                        wsLog.Cells(logRow, "A").Interior.Color = RGB(255, 255, 152)
                        wsLog.Cells(logRow, "B").value = i
                        wsLog.Cells(logRow, "B").Interior.Color = RGB(12, 238, 33)
                        wsLog.Cells(logRow, "D").value = ws2.Cells(i, "E").text
                        wsLog.Cells(logRow, "D").Interior.Color = RGB(12, 238, 33)
                        wsLog.Cells(logRow, "C").value = ws2.Cells(i, "D").text
                        wsLog.Cells(logRow, "C").Interior.Color = RGB(12, 238, 33)
                        wsLog.Cells(logRow, "E").value = ws2.Cells(i, "F").text
                        wsLog.Cells(logRow, "E").Interior.Color = RGB(12, 238, 33)
                        wsLog.Cells(logRow, "F").value = "MATCHED"
                        wsLog.Cells(logRow, "F").Interior.Color = RGB(12, 238, 33)
                        
                        For j = 2 To ws1.Cells(ws1.Rows.Count, "Q").End(xlUp).Row
                            If LCase(CleanKey(ws1.Cells(j, "Q").text)) = LCase(CleanKey(matchKey)) Then
                                wsLog.Cells(logRow, "G").value = ws1.Cells(j, "F").text
                                wsLog.Cells(logRow, "G").Interior.Color = RGB(12, 238, 33)
                                wsLog.Cells(logRow, "H").value = ws1.Cells(j, "Q").text
                                wsLog.Cells(logRow, "H").Interior.Color = RGB(12, 238, 33)
                                wsLog.Cells(logRow, "I").value = ws1.Cells(j, "P").text
                                wsLog.Cells(logRow, "I").Interior.Color = RGB(12, 238, 33)
                                wsLog.Cells(logRow, "J").value = dict(dictKey)
                                wsLog.Cells(logRow, "J").Interior.Color = RGB(12, 238, 33)
                                wsLog.Cells(logRow, "K").value = "-"
                                wsLog.Cells(logRow, "K").Interior.Color = RGB(12, 238, 33)
                                Exit For
                            End If
                        Next j
                            
                        wsLog.Columns("A:K").AutoFit
                        
                        With wsLog.Range("A" & logRow & ":K" & logRow).Borders
                            .LineStyle = xlContinuous
                            .Color = RGB(0, 0, 0)
                            .Weight = xlThin
                        End With
                        logRow = logRow + 1
                        
                    Else
                        If ws2.Cells(i, "AD").value = "" Then
                            ws2.Cells(i, "AD").value = "Waiting for Information"
                        End If
                    
                        If ws2.Cells(i, "AE").value = "" Then
                            partType = ws2.Cells(i, "C").value
                            
                            Select Case partType
                                Case "IC", "ASIC", "Tr"
                                    commentText = Format(Date, "yyyy/mm/dd") & "_" & userName & vbCrLf & _
                                        "This components is new series as Nissan." & vbCrLf & "We need to confirm the qualification level for automotive. Please submit the data as follows." & vbCrLf & _
                                        "1. Datasheet" & vbCrLf & "2. Reliability test result of AEC-Q." & vbCrLf & "3. Faliure rate" & vbCrLf & "4. Quality Control Plan and final test" & vbCrLf & "To clarify the final test menu & conditon. " & vbCrLf & "5. AC/DC Characteristic performance on 3 operating temperature" & vbCrLf & "6. Test Coverage " & vbCrLf & "Digital ? %, Analog ? %" & vbCrLf & "7. Tj() on worst condition" & vbCrLf & "Please inform the calculation result of Tj() on worst condition." & vbCrLf & "Worst condition means Ta_Max, Maximum_Power(V/I)"
                                Case "LED"
                                    commentText = Format(Date, "yyyy/mm/dd") & "_" & userName & vbCrLf & _
                                        "This components is new series as Nissan." & vbCrLf & "We need to confirm the qualification level for automotive. Please submit the data as follows." & vbCrLf & _
                                        "1. Datasheet" & vbCrLf & "2. Reliability test result of AEC-Q." & vbCrLf & "To include of H3S gas corrosion test result."
                                Case Else
                                    commentText = Format(Date, "yyyy/mm/dd") & "_" & userName & vbCrLf & _
                                        "This components is new series as Nissan." & vbCrLf & "We need to confirm the qualification level for automotive. Please submit the data as follows." & vbCrLf & _
                                        "1. Datasheet" & vbCrLf & "2. Reliability test result of AEC-Q."
                            End Select
                            
                            ws2.Cells(i, "AE").value = commentText
                        End If
    
                        ' create log
                        wsLog.Cells(logRow, "A").value = ws2.Name
                        wsLog.Cells(logRow, "A").Interior.Color = RGB(255, 255, 152)
                        wsLog.Cells(logRow, "B").value = i
                        wsLog.Cells(logRow, "B").Interior.Color = RGB(255, 0, 0)
                        wsLog.Cells(logRow, "D").value = ws2.Cells(i, "E").text
                        wsLog.Cells(logRow, "D").Interior.Color = RGB(255, 0, 0)
                        wsLog.Cells(logRow, "C").value = ws2.Cells(i, "D").text
                        wsLog.Cells(logRow, "C").Interior.Color = RGB(255, 0, 0)
                        wsLog.Cells(logRow, "E").value = ws2.Cells(i, "F").text
                        wsLog.Cells(logRow, "E").Interior.Color = RGB(255, 0, 0)
                        wsLog.Cells(logRow, "F").value = "Unmatched. Review again"
                        wsLog.Cells(logRow, "F").Interior.Color = RGB(255, 0, 0)

                        wsLog.Columns("A:K").AutoFit
                        
                        With wsLog.Range("A" & logRow & ":K" & logRow).Borders
                            .LineStyle = xlContinuous
                            .Color = RGB(0, 0, 0)
                            .Weight = xlThin
                        End With
                        
                        logRow = logRow + 1
                    End If
                Next i
            End If
        End If
    Next ws2
    
   'compare 2nd

    Dim logLastRow As Long
    logLastRow = wsLog.Cells(wsLog.Rows.Count, "D").End(xlUp).Row
    
    For i = 3 To logLastRow
        If LCase(wsLog.Cells(i, "F").text) <> "matched" Then
            Dim unmatchedKey As String
            unmatchedKey = LCase(CleanKey(wsLog.Cells(i, "D").text))
        
            For Each dictKey In dict.Keys
                If SimilarityRatio(unmatchedKey, CStr(dictKey)) >= 0.85 Then
                    wsLog.Cells(i, "K").value = "Can was family? "
                    wsLog.Cells(i, "H").value = dictKey
                    wsLog.Cells(i, "J").value = dict(dictKey)
                     
                    For j = 2 To ws1.Cells(ws1.Rows.Count, "Q").End(xlUp).Row
                        Dim cellText As String
                        cellText = ws1.Cells(j, "Q").text
                    
                        If cellText <> "" And Not IsError(dictKey) Then
                            If LCase(CleanKey(cellText)) = LCase(CleanKey(CStr(dictKey))) Then
                                wsLog.Cells(i, "I").value = ws1.Cells(j, "P").text
                                wsLog.Cells(i, "G").value = ws1.Cells(j, "F").text
                                Exit For
                            End If
                        End If
                    Next j
                    
                    With wsLog.Range("G" & i & ":K" & i).Borders
                        .LineStyle = xlContinuous
                        .Color = RGB(0, 0, 0)
                        .Weight = xlThin
                    End With
                    
                    With wsLog.Range("G" & i & ":K" & i).Interior
                        .Color = RGB(200, 255, 200)
                    End With
        
                    Exit For
                End If
            Next dictKey
        End If
    Next i
    wsLog.Columns("G:K").AutoFit

    'Fill out information
    Dim targetRow As Long
    Dim currentDate As String
    Dim companyName As String
    Dim commentText1 As String
    
    ' Information of sheet
    currentDate = Format(Date, "yyyy/mm/dd")
    companyName = "Nissan"
    commentText1 = "Updated comment"
    
    'Check sheet have B1 = "Component BOM Review Sheet"
    For Each ws2 In wb2.Sheets
        If Not ws2 Is Nothing Then
            If ws2.Range("B1").value = "Component BOM Review Sheet" Then
                
                ' Find empty row
                targetRow = 10
                Do While Not IsEmpty(ws2.Cells(targetRow, "C")) Or _
                          Not IsEmpty(ws2.Cells(targetRow, "E")) Or _
                          Not IsEmpty(ws2.Cells(targetRow, "F")) Or _
                          Not IsEmpty(ws2.Cells(targetRow, "H"))
                    targetRow = targetRow + 1
                Loop
                ws2.Cells(targetRow, "C").value = currentDate
                If IsEmpty(ws2.Cells(targetRow, "E")) Then ws2.Cells(targetRow, "E").value = companyName
                If IsEmpty(ws2.Cells(targetRow, "F")) Then ws2.Cells(targetRow, "F").value = userName
                If IsEmpty(ws2.Cells(targetRow, "H")) Then ws2.Cells(targetRow, "H").value = commentText1
                ws2.Cells(targetRow, "E").HorizontalAlignment = xlCenter
                
            End If
        End If
    Next ws2

    ' Save new file
    todayStr = Format(Date, "yyyy-mm-dd")
    fileName = Dir(file2Path)
    folderPath = Left(file2Path, InStrRev(file2Path, "\"))
    fileName = Replace(fileName, ".xlsm", "")
    fileName = Replace(fileName, ".xlsx", "")
    fileName = Replace(fileName, ".xls", "")
    Set regex = CreateObject("VBScript.RegExp")
    With regex
        .Global = True
        .IgnoreCase = True
        .Pattern = "(\d{4}[-/]\d{2}[-/]\d{2})|(\d{2}[-/]\d{2}[-/]\d{4})|(\d{8})"
        fileName = .Replace(fileName, "")
    End With

    newFileName = Trim(fileName) & "_" & todayStr & ".xlsx"
    wb2.SaveAs fileName:=folderPath & newFileName, FileFormat:=xlOpenXMLWorkbook
    wb2.Close SaveChanges:=False
    wb1.Close SaveChanges:=False
    Application.DisplayAlerts = True

    MsgBox "Done", vbInformation
End Sub